name: Build everytime push or merge

on:
  push:
    branches:
      - '**'        # matches every branch

defaults:
  run:
    shell: bash

permissions: write-all

jobs:
  build:
    strategy:
      matrix:
        environment: [dev]
    name: "build"
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup JDK
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test execution
        run: |
          mvn test
      
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v4.9
        with:
          coverage_results_path: target/site/jacoco/jacoco.xml
          coverage_report_name: 'Coverage build ${{ github.run_number }}'
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 90
          fail_below_threshold: false
          publish_only_summary: false

      - name: Fail Build if overall coverage is less than 90%
        if: steps.jacoco_reporter.outputs.coverage_percentage < 90.0 
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Overall coverage is less than 90%!')

      - name: Build docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.DOCKER_IMAGE_NAME}}
          DOCKER_IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$DOCKER_IMAGE_TAG .

  coverage:
    strategy:
      matrix:
        environment: [dev]
    name: "coverage"
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    steps:
      # - uses: actions/checkout@v3
      #   with:
      #     fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # - name: Analyze with SonarCloud
      #   run: ./mvnw -B verify sonar:sonar -Dsonar.projectKey=pagopa_atm-layer-mil-integration -Dsonar.organization=pagopa -Dsonar.login=$SONAR_TOKEN
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # - name: Code Review
      #   uses: pagopa/github-actions-template/maven-code-review@v1.10.4
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     sonar_token: ${{ secrets.SONAR_TOKEN }}
      #     project_key: pagopa_atm-layer-mil-adapter
      #     cpd_exclusions: "src/test/"

      # - name: Code Review
      #   run: |
      #     mvn clean verify sonar:sonar -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      - name: Code Review
        uses: pagopa/github-actions-template/maven-code-review@v1.10.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          project_key: pagopa_atm-layer-mil-integration
          cpd_exclusions: "src/test/"
          java_version: 21
