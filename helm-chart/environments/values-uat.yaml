# Default values for atm-layer-mil-adapter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: 00000000000.dkr.ecr.eu-south-1.amazonaws.com/xxxxxxx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

namespace: pagopa

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

milAuthenticator:
  basePath: http://pagopa-uat-atm-layer-mil-authenticator.pagopa.svc.cluster.local:8080
  relativePath: /api/v1/mil-authenticator/token

springProfilesActive: uat

milAdapter:
  disableBackoffStrategy: true
  lockDuration: 20000
  asyncResponseTimeout: 20000
  milBasePath: https://mil-d-perf-ca.agreeablestone-406ca858.westeurope.azurecontainerapps.io/perf
  enableInterceptorLogging: true
  logEngineInputVariables: true
  restReadTimeout: 20000
  restConnectionTmieout: 20000
  milAuthRelativePath: /mil-auth/token
  milAuthClientCredentials: client_credentials
  tokenCacheName: token-cache
  tokenCacheMaxEntries: 100
  modelBasePath: http://pagopa-uat-atm-layer-model.pagopa.svc.cluster.local:8080
  idPayBasePath: https://api-io.uat.cstar.pagopa.it
  restPoolCorePoolSize: 5
  restPoolMaxPoolSize: 25
  completionPoolCorePoolSize: 5
  completionPoolMaxPoolSize: 25
  completionPoolThreadName: MILA-CompPool-
  tracingBackendUrl: http://jaeger-collector.default.svc.cluster.local:4317

milAuth:
  credentialsSecretEnabled: true
  credentialsSecretName: "pagopa-uat-atm-layer-mil-adapter-mil-auth"
  credentialsSecretKeys:
    clientId: CLIENT_ID
    clientSecret: CLIENT_SECRET

camundaWebUser:
  address: http://pagopa-uat-atm-layer-wf-engine.pagopa.svc.cluster.local:8080
  credentialsSecretEnabled: true
  credentialsSecretName: "pagopa-uat-atm-layer-mil-adapter-camunda"
  credentialsSecretKeys:
    username: WEB_USER
    password: WEB_PASSWORD

database:
  driver: org.postgresql.Driver
  url: jdbc:postgresql://pagopa-uat-atm-layer-rds.cluster-csdbokdg0q4t.eu-south-1.rds.amazonaws.com:5432
  db_name: pagopadb
  schema: atm_layer_engine
  credentialsSecretEnabled: true
  credentialsSecretName: "pagopa-uat-atm-layer-mil-adapter-database"
  credentialsSecretKeys:
    username: DB_USERNAME
    password: DB_PASSWORD

idPay:
  basePath: https://api-io.uat.cstar.pagopa.it
  credentialsSecretEnabled: true
  credentialsSecretName: "pagopa-uat-atm-layer-mil-adapter-idpay"
  credentialsSecretKeys:
    apiKey: API_KEY

secretProviderClass:
  enabled: true
  name: atm-layer-mil-adapter-secrets
  env: uat

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::00000000000:role/pagopa-uat-atm-layer-xxxxxx-serviceaccount-role
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: pagopa-uat-atm-layer-mil-adapter

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

deployment:
  name: pagopa-uat-atm-layer-mil-adapter
  annotations:
    reloader.stakater.com/auto: "true"
    secret.reloader.stakater.com/reload: pagopa-uat-atm-layer-mil-adapter-database, pagopa-uat-atm-layer-mil-adapter-camunda, pagopa-uat-atm-layer-mil-adapter-mil-auth, pagopa-uat-atm-layer-mil-adapter-idpay

service:
  name: pagopa-uat-atm-layer-mil-adapter
  type: NodePort
  port: 8080

ingress:
  enabled: false
  name: pagopa-uat-atm-layer-mil-adapter
  className: ""
  annotations: 
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internal"
    alb.ingress.kubernetes.io/group.name: "alb-controller"
    alb.ingress.kubernetes.io/load-balancer-name: "pagopa-uat-atm-layer-alb-int"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTP": 8080}]'
  hosts:
    - host:
      paths:
        - path: /mil/
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 200m
    memory: 1000Mi
  requests:
    cpu: 100m
    memory: 700Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 45
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

Release:
  Time:
    Seconds: 60
